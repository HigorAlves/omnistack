name: 'Code Quality'

on:
  push:
    branches: [main, dev, staging]
  pull_request:
    branches: [main, dev, staging]
  schedule:
    - cron: '17 22 * * 4'

jobs:
# THIS ONE IS JUST FOR PUBLIC REPOS AND ORGS
#  codeql:
#    name: CodeQL
#    runs-on: ubuntu-latest
#    permissions:
#      actions: read
#      contents: read
#      security-events: write
#    strategy:
#      fail-fast: false
#      matrix:
#        language: ['javascript', 'typescript']
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v3
#      - name: Initialize CodeQL
#        uses: github/codeql-action/init@v2
#        with:
#          languages: ${{ matrix.language }}
#      - name: Autobuild
#        uses: github/codeql-action/autobuild@v2
#      - name: Perform CodeQL Analysis
#        uses: github/codeql-action/analyze@v2

  audit:
    name: Security Check
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          check-latest: true
      - name: Install Npm Dependencies
        run: yarn install
      - name: Audit
        run: yarn audit

  qodana:
    name: Qodana
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: 'Qodana Scan'
        uses: JetBrains/qodana-action@v2022.3.2

  lint:
    name: Lint
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          check-latest: true
      - name: Install Npm Dependencies
        run: yarn install
      - name: Lint
        run: yarn lint:ci

  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: [lint, audit, qodana]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          check-latest: true
      - name: Install Npm Dependencies
        run: yarn install
      - name: Build
        run: yarn build